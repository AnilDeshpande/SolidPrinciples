@startuml
!define KO_KOTLIN
!define KO_ICON
skinparam class {
    BackgroundColor White
    ArrowColor SeaGreen
    BorderColor Black
}

package com.codetutor.solidprinciples.integrated {

    class College {
        - staffManager: StaffManager
        - studentManager: StudentManager
        - engagementManager: EngagementManager
        - departments: MutableList<Department>
        - staff: MutableList<Staff>
        - students: MutableList<Student>
        - courses: MutableList<Course>
        + addDepartment(department: Department)
        + addStudent(student: Student)
        + addCourse(course: Course)
        + assignStaffToDepartment(staffMember: Staff, department: Department)
        + engageStudents(staffMember: Staff, subject: String, students: List<Student>)
    }

    abstract class Department {
        - name: String
    }

    class AcademicDepartment extends Department
    class NonAcademicDepartment extends Department

    abstract class Student {
        - name: String
        - age: Int
        - dateOfBirth: String
        - department: Department
        - currentSemester: Int
        - address: Address
    }

    interface CourseTypeProvider {
        + getCourseType(): String
    }

    class UndergraduateStudent extends Student implements CourseTypeProvider
    class PostGraduateStudent extends Student implements CourseTypeProvider
    class PhdStudent extends Student implements CourseTypeProvider
    class PostDocStudent extends Student

    abstract class Staff {
        - name: String
        - department: Department
        - salaryCalculator: SalaryCalculator
        + engageStudents(subject: String, students: List<Student>, strategy: EngagementStrategy)
    }

    interface SalaryReceiver {
        + getSalary(): Double
    }

    class AcademicStaff extends Staff implements SalaryReceiver
    class NonAcademicStaff extends Staff implements SalaryReceiver
    class VisitingStaff extends Staff

    abstract class Course {
        - name: String
        - department: Department
    }

    interface TenureProvider {
        + getTenure(): Int?
    }

    class UndergraduateCourse extends Course implements TenureProvider
    class PostGraduateCourse extends Course implements TenureProvider
    class PhdCourse extends Course
    class PostDocCourse extends Course

    interface DetailedAddress {
        + getFullAddress(): String
        + getLocalAddress(): String
        + getHomeAddress(): String
        + getPostalCode(): String
    }

    class Address implements DetailedAddress {
        - localAddress: String?
        - homeAddress: String
    }

    package managers {
        class EngagementManager {
            - strategies: Map<String, EngagementStrategy>
            + engageStudents(staff: Staff, subject: String, students: List<Student>)
        }

        class StaffManager {
            + assignStaffToDepartment(staff: Staff, department: Department)
        }

        class StudentManager {
            - engagementManager: EngagementManager
            + registerStudent(students: MutableList<Student>, student: Student)
            + engageStudents(staff: Staff, subject: String, students: List<Student>)
        }

        interface EngagementStrategy {
            + engageStudents(staff: Staff, subject: String, students: List<Student>)
            + prepareMaterials(staff: Staff, subject: String)
        }

        class LectureEngagement implements EngagementStrategy
        class WorkshopEngagement implements EngagementStrategy
    }

    package calculators {
        interface SalaryCalculator {
            + calculateSalary(staff: Staff): Double
            + generatePaySlip(staff: Staff): String
            + applyBonus(staff: Staff, bonus: Double): Double
            + deductTaxes(staff: Staff, tax: Double): Double
        }

        class AcademicSalaryCalculator implements SalaryCalculator
        class VisitingSalaryCalculator implements SalaryCalculator
    }
}

Student "1" -- "1" Department : belongs to >
Student "1" -- "1" Address : resides at >
Course "1" -- "1" Department : belongs to >
StudentManager "1" -- "1" EngagementManager : uses >
StudentManager "1" -- "*" Student : manages >
Staff "1" -- "1" Department : assigned to >
Staff "1" -- "1" SalaryCalculator : uses >
College "1" -- "1" StaffManager : has >
College "1" -- "1" StudentManager : has >
College "1" -- "1" EngagementManager : has >
EngagementManager "1" -- "*" EngagementStrategy : uses >
LectureEngagement "1" -- "1" EngagementStrategy : implements >
WorkshopEngagement "1" -- "1" EngagementStrategy : implements >
AcademicStaff "1" -- "1" SalaryCalculator : uses >
NonAcademicStaff "1" -- "1" SalaryCalculator : uses >
VisitingStaff "1" -- "1" SalaryCalculator : uses >
AcademicSalaryCalculator "1" -- "1" SalaryCalculator : implements >
VisitingSalaryCalculator "1" -- "1" SalaryCalculator : implements >
SalaryReceiver <|-- AcademicStaff
SalaryReceiver <|-- NonAcademicStaff
CourseTypeProvider <|-- UndergraduateStudent
CourseTypeProvider <|-- PostGraduateStudent
CourseTypeProvider <|-- PhdStudent
TenureProvider <|-- UndergraduateCourse
TenureProvider <|-- PostGraduateCourse
DetailedAddress <|.. Address

@enduml